# Generated by Django 3.1.7 on 2023-01-27 14:10

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Assembly',
            fields=[
                ('assembly_id', models.AutoField(primary_key=True, serialize=False)),
                ('ucsc_name', models.CharField(blank=True, max_length=16, null=True)),
                ('accession', models.CharField(max_length=16, unique=True)),
                ('level', models.CharField(max_length=32)),
                ('name', models.CharField(max_length=128)),
                ('accession_body', models.CharField(blank=True, max_length=32, null=True)),
                ('assembly_default', models.CharField(blank=True, max_length=32, null=True)),
                ('tolid', models.CharField(blank=True, max_length=32, null=True, unique=True)),
                ('created', models.DateTimeField(blank=True, null=True)),
                ('ensembl_name', models.CharField(blank=True, max_length=255, null=True, unique=True)),
            ],
            options={
                'verbose_name_plural': 'Assemblies',
                'db_table': 'assembly',
            },
        ),
        migrations.CreateModel(
            name='Attribute',
            fields=[
                ('attribute_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=128)),
                ('label', models.CharField(max_length=128)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'attribute',
            },
        ),
        migrations.CreateModel(
            name='Dataset',
            fields=[
                ('dataset_id', models.AutoField(primary_key=True, serialize=False)),
                ('dataset_uuid', models.CharField(max_length=128, unique=True)),
                ('name', models.CharField(max_length=128)),
                ('version', models.CharField(blank=True, max_length=128, null=True)),
                ('created', models.DateTimeField()),
                ('label', models.CharField(max_length=128)),
            ],
            options={
                'db_table': 'dataset',
            },
        ),
        migrations.CreateModel(
            name='DatasetSource',
            fields=[
                ('dataset_source_id', models.AutoField(primary_key=True, serialize=False)),
                ('type', models.CharField(max_length=32)),
                ('name', models.CharField(max_length=255, unique=True)),
            ],
            options={
                'db_table': 'dataset_source',
            },
        ),
        migrations.CreateModel(
            name='DatasetType',
            fields=[
                ('dataset_type_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=32)),
                ('label', models.CharField(max_length=128)),
                ('topic', models.CharField(max_length=32)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('details_uri', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'dataset_type',
            },
        ),
        migrations.CreateModel(
            name='EnsemblRelease',
            fields=[
                ('release_id', models.AutoField(primary_key=True, serialize=False)),
                ('version', models.DecimalField(decimal_places=1, max_digits=10)),
                ('release_date', models.DateField()),
                ('label', models.CharField(blank=True, max_length=64, null=True)),
                ('is_current', models.BooleanField()),
                ('release_type', models.CharField(max_length=16)),
            ],
            options={
                'db_table': 'ensembl_release',
            },
        ),
        migrations.CreateModel(
            name='EnsemblSite',
            fields=[
                ('site_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=64)),
                ('label', models.CharField(max_length=64)),
                ('uri', models.CharField(max_length=64)),
            ],
            options={
                'db_table': 'ensembl_site',
            },
        ),
        migrations.CreateModel(
            name='Genome',
            fields=[
                ('genome_id', models.AutoField(primary_key=True, serialize=False)),
                ('genome_uuid', models.CharField(max_length=128, unique=True)),
                ('created', models.DateTimeField()),
                ('assembly', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='ensembl_metadata.assembly')),
            ],
            options={
                'db_table': 'genome',
            },
        ),
        migrations.CreateModel(
            name='Organism',
            fields=[
                ('organism_id', models.AutoField(primary_key=True, serialize=False)),
                ('taxonomy_id', models.IntegerField()),
                ('species_taxonomy_id', models.IntegerField(blank=True, null=True)),
                ('display_name', models.CharField(max_length=128)),
                ('strain', models.CharField(blank=True, max_length=128, null=True)),
                ('scientific_name', models.CharField(blank=True, max_length=128, null=True)),
                ('url_name', models.CharField(max_length=128)),
                ('ensembl_name', models.CharField(max_length=128, unique=True)),
                ('scientific_parlance_name', models.CharField(blank=True, max_length=255, null=True)),
                ('assemblies', models.ManyToManyField(through='ensembl_metadata.Genome', to='ensembl_metadata.Assembly')),
            ],
            options={
                'db_table': 'organism',
                'ordering': ['ensembl_name', 'scientific_name'],
            },
        ),
        migrations.CreateModel(
            name='OrganismGroup',
            fields=[
                ('organism_group_id', models.AutoField(primary_key=True, serialize=False)),
                ('type', models.CharField(max_length=32)),
                ('name', models.CharField(max_length=255)),
                ('code', models.CharField(blank=True, max_length=48, null=True, unique=True)),
            ],
            options={
                'db_table': 'organism_group',
                'unique_together': {('type', 'name')},
            },
        ),
        migrations.CreateModel(
            name='OrganismGroupMember',
            fields=[
                ('organism_group_member_id', models.AutoField(primary_key=True, serialize=False)),
                ('is_reference', models.BooleanField()),
                ('organism', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='ensembl_metadata.organism')),
                ('organism_group', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='ensembl_metadata.organismgroup')),
            ],
            options={
                'db_table': 'organism_group_member',
                'unique_together': {('organism', 'organism_group')},
            },
        ),
        migrations.AddField(
            model_name='organism',
            name='groups',
            field=models.ManyToManyField(through='ensembl_metadata.OrganismGroupMember', to='ensembl_metadata.OrganismGroup'),
        ),
        migrations.CreateModel(
            name='GenomeRelease',
            fields=[
                ('genome_release_id', models.AutoField(primary_key=True, serialize=False)),
                ('is_current', models.IntegerField()),
                ('genome', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='ensembl_metadata.genome')),
                ('release', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='ensembl_metadata.ensemblrelease')),
            ],
            options={
                'db_table': 'genome_release',
            },
        ),
        migrations.CreateModel(
            name='GenomeDataset',
            fields=[
                ('genome_dataset_id', models.AutoField(primary_key=True, serialize=False)),
                ('is_current', models.IntegerField()),
                ('dataset', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='ensembl_metadata.dataset')),
                ('genome', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='ensembl_metadata.genome')),
                ('release', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='ensembl_metadata.ensemblrelease')),
            ],
            options={
                'db_table': 'genome_dataset',
            },
        ),
        migrations.AddField(
            model_name='genome',
            name='datasets',
            field=models.ManyToManyField(through='ensembl_metadata.GenomeDataset', to='ensembl_metadata.Dataset'),
        ),
        migrations.AddField(
            model_name='genome',
            name='organism',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='ensembl_metadata.organism'),
        ),
        migrations.AddField(
            model_name='genome',
            name='releases',
            field=models.ManyToManyField(through='ensembl_metadata.GenomeRelease', to='ensembl_metadata.EnsemblRelease'),
        ),
        migrations.AddField(
            model_name='ensemblrelease',
            name='datasets',
            field=models.ManyToManyField(through='ensembl_metadata.GenomeDataset', to='ensembl_metadata.Dataset'),
        ),
        migrations.AddField(
            model_name='ensemblrelease',
            name='genomes',
            field=models.ManyToManyField(through='ensembl_metadata.GenomeRelease', to='ensembl_metadata.Genome'),
        ),
        migrations.AddField(
            model_name='ensemblrelease',
            name='site',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='ensembl_metadata.ensemblsite'),
        ),
        migrations.AddField(
            model_name='dataset',
            name='dataset_source',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='ensembl_metadata.datasetsource'),
        ),
        migrations.AddField(
            model_name='dataset',
            name='dataset_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='ensembl_metadata.datasettype'),
        ),
        migrations.AlterUniqueTogether(
            name='ensemblrelease',
            unique_together={('version', 'site')},
        ),
        migrations.CreateModel(
            name='DatasetAttribute',
            fields=[
                ('dataset_attribute_id', models.AutoField(primary_key=True, serialize=False)),
                ('type', models.CharField(max_length=32)),
                ('value', models.CharField(max_length=128)),
                ('attribute', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='ensembl_metadata.attribute')),
                ('dataset', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='ensembl_metadata.dataset')),
            ],
            options={
                'db_table': 'dataset_attribute',
                'unique_together': {('dataset', 'attribute', 'type', 'value')},
            },
        ),
        migrations.CreateModel(
            name='AssemblySequence',
            fields=[
                ('assembly_sequence_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=128, null=True)),
                ('accession', models.CharField(max_length=128)),
                ('chromosomal', models.IntegerField()),
                ('length', models.IntegerField()),
                ('sequence_location', models.CharField(blank=True, max_length=10, null=True)),
                ('sequence_checksum', models.CharField(blank=True, max_length=32, null=True)),
                ('ga4gh_identifier', models.CharField(blank=True, max_length=32, null=True)),
                ('assembly', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='ensembl_metadata.assembly')),
            ],
            options={
                'db_table': 'assembly_sequence',
                'unique_together': {('assembly', 'accession')},
            },
        ),
    ]
